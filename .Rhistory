blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
library(plotly)
library(DT)
library(kableExtra)
library(knitr)
library(forecast)
library(sweep)
install.packages("recipes")
install.packages("recipes")
blogdown:::serve_site()
blogdown:::build_site()
library(tidyverse)
library(plotly)
library(DT)
library(kableExtra)
library(knitr)
theme_set(theme_minimal())
yearly_tag <- read_csv("https://gist.githubusercontent.com/dgrtwo/a30d99baa9b7bfc9f2440b355ddd1f75/raw/700ab5bb0b5f8f5a14377f5103dbe921d4238216/by_tag_year.csv")
kable(head(yearly_tag)) %>%
kable_styling()
blogdown::check_site()
blogdown::check_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
library(plotly)
library(DT)
library(kableExtra)
library(knitr)
theme_set(theme_minimal())
yearly_tag <- read_csv("https://gist.githubusercontent.com/dgrtwo/a30d99baa9b7bfc9f2440b355ddd1f75/raw/700ab5bb0b5f8f5a14377f5103dbe921d4238216/by_tag_year.csv")
kable(head(yearly_tag)) %>%
kable_styling()
# Add fraction column
yearly_tag <-
yearly_tag %>%
mutate(fraction = round(number/year_total, 4))
# Print the new table
kable(head(yearly_tag)) %>%
kable_styling()
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[1] <- 0.053
d_ends[6] <- 0.024
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
yearly_tag %>%
group_by(year) %>%
summarise(year_total = first(year_total)) %>%
filter(year <= 2017) %>%
ggplot() +
geom_line(aes(year, year_total), color = "steelblue", size = 1.5, alpha = .5 ) +
geom_point(aes(year, year_total), color = "steelblue", size = 1.5) +
scale_x_continuous(breaks = c(2008:2017)) +
labs(title = "Total number of questions in Stack overflow per year",
x = "",
y = "Num. of questions")
library(forecast)
library(sweep)
# Get tags for top programming languages
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
# Create the dataset
yearly_nest <-
yearly_tag  %>%
filter(tag %in% programming_lang) %>%
arrange(tag, year) %>%
select(tag, fraction) %>%
group_by(tag) %>%
nest(.key = "data.tbl") %>% # nest it
mutate(data.ts = map(.x    = data.tbl, #create ts object
.f    = ts,
start = 2008)
) %>%
mutate(fit_ets = map(data.ts, ets)) %>%
mutate(summary_ets = map(fit_ets, summary)) %>%
mutate(mape_ets = map(summary_ets, 5)) %>%
mutate(fit.arima = map(data.ts, auto.arima)) %>%
mutate(summary_arima = map(fit.arima, summary)) %>%
mutate(mape_arima = map(summary_arima, 5)) %>%
mutate(final_model = if_else(as.numeric(mape_arima) <= as.numeric(mape_ets), fit.arima, fit_ets)) %>%
mutate(predict = map(final_model, forecast, h = 5)) %>%
mutate(sweep = map(predict, sw_sweep)) %>%
unnest(sweep) %>%
mutate(fraction = if_else(fraction < 0, 0, fraction))
table_a <-
yearly_tag  %>%
filter(tag %in% programming_lang) %>%
arrange(tag, year) %>%
select(tag, fraction) %>%
group_by(tag) %>%
nest(.key = "data.tbl") %>% # nest it
mutate(data.ts = map(.x    = data.tbl, #create ts object
.f    = ts,
start = 2008)
) %>%
mutate(fit_ets = map(data.ts, ets)) %>%
mutate(summary_ets = map(fit_ets, summary)) %>%
mutate(mape_ets = map(summary_ets, 5)) %>%
mutate(fit.arima = map(data.ts, auto.arima)) %>%
mutate(summary_arima = map(fit.arima, summary)) %>%
mutate(mape_arima = map(summary_arima, 5)) %>%
select(tag, mape_arima, mape_ets) %>%
mutate(mape_arima = round(as.numeric(mape_arima), 2),
mape_ets = round(as.numeric(mape_ets), 2))
table_a %>%
kable() %>%
kable_styling()
table_a %>%
kable() %>%
kable_styling() %>% View()
table_a %>%
kable() %>%
kable_styling()
filter(yearly_nest, key == "forecast") %>%
top_n(15) %>%
kable() %>%
kable_styling()
filter(yearly_nest, key == "forecast") %>%
top_n(15) %>%
kable() %>%
kable_styling()
filter(yearly_nest, key == "forecast") %>%
top_n(15) %>%
kable()
ilter(yearly_nest, key == "forecast") %>%
top_n(15)
filter(yearly_nest, key == "forecast") %>%
top_n(15)
yearly_nest
yearly_nest %>% View()
yearly_nest %>%
select(tag, index, key, fraction, lo.80, lo.95, hi.80, hi.95) %>%
filter(key == "forecast") %>%
top_n(15) %>%
kable() %>%
kable_styling()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(grid)
library(rworldmap)
library(ggthemes)
library(purrr)
library(cluster)
library(ggord)
remotes::install_github("fawda123/ggord")
blogdown:::new_post_addin()
install.packages("mapproj")
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("rpart.plot")
# Load Libraries
library(dplyr)
library(tidyr)
# library(xda)
library(corrgram)
library(ggplot2)
library(ggthemes)
library(cluster)
library(caret)
# Insert dataset into R
med <- read.table("/Users/manos/Onedrive/Projects/R/Blogdown/data/cancer.txt", sep=",", header = TRUE)
# Discard the id column as it will not be used in any of the analysis below
med <- med[, 2:12]
# change the name of the first column to diagnosis
colnames(med)[1] <- "diagnosis"
# Create a long version of the dataset
med2 <- gather(med, "feature", "n", 2:11)
ggplot(med2)+
geom_boxplot(aes(diagnosis, log(n)))+
facet_wrap(~feature, scales = "free")+
labs(title = "Box-plot of all predictors(log scaled) per tumor type",
subtitle = "tumor can be either malignant -M- or benign -B-")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("Predictor's log value") +
xlab('')
# Scatterplot matrix of all numeric variables
pairs(~., data = med[, sapply(med, is.numeric)], main = "Scatterplot Matrix of variables")
library(corrplot)
# Plot correlogram of numeric variables
corrplot(cor(med[,2:11]), type="lower", tl.srt = 90)
library(MASS)
# Create a logistic regression model
glm <- glm(diagnosis ~ ., family=binomial(link='logit'), data = med)
med$diagnosis <- as.factor(med$diagnosis)
# Create a logistic regression model
glm <- glm(diagnosis ~ ., family=binomial(link='logit'), data = med)
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
gba(0, 0, 0, 0.06)
rgba(0, 0, 0, 0.06);
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
